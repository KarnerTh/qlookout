// Code generated by mockery v2.21.4. DO NOT EDIT.

package observer

import mock "github.com/stretchr/testify/mock"

// MockPublisher is an autogenerated mock type for the Publisher type
type MockPublisher[T interface{}] struct {
	mock.Mock
}

// Publish provides a mock function with given fields: value
func (_m *MockPublisher[T]) Publish(value T) {
	_m.Called(value)
}

type mockConstructorTestingTNewMockPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPublisher creates a new instance of MockPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPublisher[T interface{}](t mockConstructorTestingTNewMockPublisher) *MockPublisher[T] {
	mock := &MockPublisher[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
