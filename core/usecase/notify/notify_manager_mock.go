// Code generated by mockery v2.21.4. DO NOT EDIT.

package notify

import (
	review "github.com/KarnerTh/query-lookout/usecase/review"
	mock "github.com/stretchr/testify/mock"
)

// MockNotifyManager is an autogenerated mock type for the NotifyManager type
type MockNotifyManager struct {
	mock.Mock
}

// Notify provides a mock function with given fields: reviewResult
func (_m *MockNotifyManager) Notify(reviewResult review.ReviewResult) {
	_m.Called(reviewResult)
}

// Start provides a mock function with given fields:
func (_m *MockNotifyManager) Start() {
	_m.Called()
}

type mockConstructorTestingTNewMockNotifyManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNotifyManager creates a new instance of MockNotifyManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNotifyManager(t mockConstructorTestingTNewMockNotifyManager) *MockNotifyManager {
	mock := &MockNotifyManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
