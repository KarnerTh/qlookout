// Code generated by mockery v2.21.4. DO NOT EDIT.

package review

import (
	watch "github.com/KarnerTh/query-lookout/usecase/watch"
	mock "github.com/stretchr/testify/mock"
)

// MockReviewer is an autogenerated mock type for the Reviewer type
type MockReviewer struct {
	mock.Mock
}

// Review provides a mock function with given fields: watchResult
func (_m *MockReviewer) Review(watchResult watch.WatchResult) ([]ReviewResult, error) {
	ret := _m.Called(watchResult)

	var r0 []ReviewResult
	var r1 error
	if rf, ok := ret.Get(0).(func(watch.WatchResult) ([]ReviewResult, error)); ok {
		return rf(watchResult)
	}
	if rf, ok := ret.Get(0).(func(watch.WatchResult) []ReviewResult); ok {
		r0 = rf(watchResult)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]ReviewResult)
		}
	}

	if rf, ok := ret.Get(1).(func(watch.WatchResult) error); ok {
		r1 = rf(watchResult)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Start provides a mock function with given fields:
func (_m *MockReviewer) Start() {
	_m.Called()
}

type mockConstructorTestingTNewMockReviewer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockReviewer creates a new instance of MockReviewer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockReviewer(t mockConstructorTestingTNewMockReviewer) *MockReviewer {
	mock := &MockReviewer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
